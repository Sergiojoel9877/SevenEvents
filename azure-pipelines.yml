# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

#pool:
#  vmImage: 'windows-latest'

#variables:
  #solution: '**/*.sln'
  #buildPlatform: 'Any CPU'
#  buildConfiguration: 'Release'

#steps:
#- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- script: dotnet restore
#  displayName: 'dotnet restore'

#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buldConfiguration)'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
pool:
  #vmImage: 'Ubuntu 16.04'
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet restore
  displayName: 'dotnet restore'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish $(buildConfiguration)'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'